load(
    "@rules_ll//ll:defs.bzl",
    "OFFLOAD_ALL_AMDGPU",
    "OFFLOAD_ALL_NVPTX",
    "ll_binary",
    "ll_library",
    "ll_test",
)

# Without the -fgpu-rdc flag this build would fail. The device code needs to be
# relocatable so that the kernel symbols can be resolved.
[
    (
        ll_library(
            name = "add_{}".format(name),
            srcs = [
                "add.hip.cpp",
            ],
            compilation_mode = "hip_{}".format(name),
            compile_flags = flags,
            exposed_hdrs = [
                "add.hip.hpp",
            ],
        ),
        ll_library(
            name = "multiply_{}".format(name),
            srcs = [
                "multiply.hip.cpp",
            ],
            compilation_mode = "hip_{}".format(name),
            compile_flags = flags,
            exposed_hdrs = [
                "multiply.hip.hpp",
            ],
        ),
        ll_binary(
            name = name,
            srcs = [
                "main.hip.cpp",
            ],
            compilation_mode = "hip_{}".format(name),
            compile_flags = flags,
            visibility = ["@//:__pkg__"],
            deps = [
                ":add_{}".format(name),
                ":multiply_{}".format(name),
            ],
        ),
        ll_test(
            name = "{}_test".format(name),
            size = "small",
            srcs = [
                "main.hip.cpp",
            ],
            compilation_mode = "hip_{}".format(name),
            compile_flags = flags,
            tags = [name],
            visibility = ["@//:__pkg__"],
            deps = [
                ":add_{}".format(name),
                ":multiply_{}".format(name),
            ],
        ),
    )
    for (name, flags) in [
        (
            "nvptx",
            OFFLOAD_ALL_NVPTX + [
                "-std=c++20",
                "-fgpu-rdc",
            ],
        ),
        (
            "amdgpu",
            OFFLOAD_ALL_AMDGPU + [
                "-std=c++20",
                "-fgpu-rdc",
            ],
        ),
    ]
]
