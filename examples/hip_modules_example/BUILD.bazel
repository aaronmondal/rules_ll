load(
    "@rules_ll//ll:defs.bzl",
    "OFFLOAD_ALL_AMDGPU",
    "OFFLOAD_ALL_NVPTX",
    "ll_binary",
    "ll_library",
    "ll_test",
)

ll_library(
    name = "module_wrapper",
    srcs = ["module_wrapper.cpp"],
    compile_flags = ["--std=c++20"],
    exposed_hdrs = ["module_wrapper.hpp"],
    exposed_interfaces = {"a.cppm": "a"},
)

[
    (
        ll_library(
            name = "device_code_{}".format(name),
            srcs = ["hip_dependent.cpp"],
            compilation_mode = "hip_{}".format(name),
            compile_flags = flags,
            exposed_hdrs = ["hip_dependent.hpp"],
        ),
        ll_binary(
            name = name,
            srcs = ["main.cpp"],
            compilation_mode = "hip_{}".format(name),
            compile_flags = flags,
            visibility = ["@//:__pkg__"],
            deps = [
                ":device_code_{}".format(name),
                ":module_wrapper",
            ],
        ),
        ll_test(
            name = "{}_test".format(name),
            srcs = ["main.cpp"],
            compilation_mode = "hip_{}".format(name),
            compile_flags = flags,
            tags = [name],
            visibility = ["@//:__pkg__"],
            deps = [
                ":device_code_{}".format(name),
                ":module_wrapper",
            ],
        ),
    )
    for (name, flags) in [
        (
            "nvptx",
            OFFLOAD_ALL_NVPTX + ["-std=c++20"],
        ),
        (
            "amdgpu",
            OFFLOAD_ALL_AMDGPU + ["-std=c++20"],
        ),
    ]
]
