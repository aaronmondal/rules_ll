diff --git a/hipamd/include/hip/nvidia_detail/nvidia_hip_runtime_api.h b/hipamd/include/hip/nvidia_detail/nvidia_hip_runtime_api.h
index 36ea5ca5f..c21497664 100644
--- a/hipamd/include/hip/nvidia_detail/nvidia_hip_runtime_api.h
+++ b/hipamd/include/hip/nvidia_detail/nvidia_hip_runtime_api.h
@@ -2669,17 +2669,21 @@ inline static hipError_t hipCtxGetFlags(unsigned int* flags) {
     return hipCUResultTohipError(cuCtxGetFlags(flags));
 }
 
+#if CUDA_VERSION < CUDA_12000
 inline static hipError_t hipCtxDetach(hipCtx_t ctx) {
     return hipCUResultTohipError(cuCtxDetach(ctx));
 }
+#endif
 
 inline static hipError_t hipDeviceGet(hipDevice_t* device, int ordinal) {
     return hipCUResultTohipError(cuDeviceGet(device, ordinal));
 }
 
+#if CUDA_VERSION < CUDA_12000
 inline static hipError_t hipDeviceComputeCapability(int* major, int* minor, hipDevice_t device) {
     return hipCUResultTohipError(cuDeviceComputeCapability(major, minor, device));
 }
+#endif
 
 inline static hipError_t hipDeviceGetName(char* name, int len, hipDevice_t device) {
     return hipCUResultTohipError(cuDeviceGetName(name, len, device));
@@ -2743,9 +2747,11 @@ inline static hipError_t hipModuleGetFunction(hipFunction_t* function, hipModule
     return hipCUResultTohipError(cuModuleGetFunction(function, module, kname));
 }
 
+#if CUDA_VERSION < CUDA_12000
 inline static hipError_t hipModuleGetTexRef(hipTexRef* pTexRef, hipModule_t hmod, const char* name){
     return hipCUResultTohipError(cuModuleGetTexRef(pTexRef, hmod, name));
 }
+#endif
 
 inline static hipError_t hipFuncGetAttributes(hipFuncAttributes* attr, const void* func) {
     return hipCUDAErrorTohipError(cudaFuncGetAttributes(attr, func));
@@ -2870,6 +2876,7 @@ inline static hipError_t hipModuleLaunchCooperativeKernel(hipFunction_t f, unsig
                                                            sharedMemBytes, stream,kernelParams));
 }
 
+#if CUDA_VERSION < CUDA_12000
 inline static hipError_t hipLaunchCooperativeKernelMultiDevice(hipLaunchParams* launchParamsList,
                                                  int  numDevices, unsigned int  flags) {
     return hipCUDAErrorTohipError(cudaLaunchCooperativeKernelMultiDevice(launchParamsList, numDevices, flags));
@@ -2882,6 +2889,7 @@ inline static hipError_t hipModuleLaunchCooperativeKernelMultiDevice(
     return hipCUResultTohipError(cuLaunchCooperativeKernelMultiDevice(launchParamsList,
                                                                       numDevices, flags));
 }
+#endif
 
 inline static hipError_t hipImportExternalSemaphore(hipExternalSemaphore_t* extSem_out,
                                       const hipExternalSemaphoreHandleDesc* semHandleDesc) {
@@ -3180,6 +3188,7 @@ __HIP_DEPRECATED inline static hipError_t hipTexRefSetFilterMode(hipTexRef hTexR
     return hipCUResultTohipError(cuTexRefSetFilterMode(hTexRef,fm));
 }
 
+#if CUDA_VERSION < CUDA_12000
 inline static hipError_t hipTexRefSetAddress(size_t *ByteOffset, hipTexRef hTexRef, hipDeviceptr_t dptr, size_t bytes){
     return hipCUResultTohipError(cuTexRefSetAddress(ByteOffset,hTexRef,dptr,bytes));
 }
@@ -3187,6 +3196,7 @@ inline static hipError_t hipTexRefSetAddress(size_t *ByteOffset, hipTexRef hTexR
 inline static hipError_t hipTexRefSetAddress2D(hipTexRef hTexRef, const CUDA_ARRAY_DESCRIPTOR *desc, hipDeviceptr_t dptr, size_t Pitch){
     return hipCUResultTohipError(cuTexRefSetAddress2D(hTexRef,desc,dptr,Pitch));
 }
+#endif
 
 __HIP_DEPRECATED inline static hipError_t hipTexRefSetFormat(hipTexRef hTexRef, hipArray_Format fmt, int NumPackedComponents){
     return hipCUResultTohipError(cuTexRefSetFormat(hTexRef,fmt,NumPackedComponents));
