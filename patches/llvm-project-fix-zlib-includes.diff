diff --git a/lld/ELF/OutputSections.cpp b/lld/ELF/OutputSections.cpp
index ee9374186787..5bef0824d260 100644
--- a/lld/ELF/OutputSections.cpp
+++ b/lld/ELF/OutputSections.cpp
@@ -24,7 +24,7 @@
 #if LLVM_ENABLE_ZLIB
 // Avoid introducing max as a macro from Windows headers.
 #define NOMINMAX
-#include <zlib.h>
+#include "zlib.h"
 #endif
 #if LLVM_ENABLE_ZSTD
 #include <zstd.h>
diff --git a/llvm/lib/Support/CRC.cpp b/llvm/lib/Support/CRC.cpp
index 2bc668beed32..3091ab675fc0 100644
--- a/llvm/lib/Support/CRC.cpp
+++ b/llvm/lib/Support/CRC.cpp
@@ -83,7 +83,7 @@ uint32_t llvm::crc32(uint32_t CRC, ArrayRef<uint8_t> Data) {
 
 #else
 
-#include <zlib.h>
+#include "zlib.h"
 uint32_t llvm::crc32(uint32_t CRC, ArrayRef<uint8_t> Data) {
   // Zlib's crc32() only takes a 32-bit length, so we have to iterate for larger
   // sizes. One could use crc32_z() instead, but that's a recent (2017) addition
diff --git a/llvm/lib/Support/Compression.cpp b/llvm/lib/Support/Compression.cpp
index 8e57ba798f52..9c460108d5bc 100644
--- a/llvm/lib/Support/Compression.cpp
+++ b/llvm/lib/Support/Compression.cpp
@@ -18,7 +18,7 @@
 #include "llvm/Support/Error.h"
 #include "llvm/Support/ErrorHandling.h"
 #if LLVM_ENABLE_ZLIB
-#include <zlib.h>
+#include "zlib.h"
 #endif
 #if LLVM_ENABLE_ZSTD
 #include <zstd.h>
